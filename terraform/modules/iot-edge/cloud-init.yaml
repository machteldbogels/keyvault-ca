#cloud-config

apt:
  preserve_sources_list: true
  sources:
    msft.list:
      source: "deb https://packages.microsoft.com/ubuntu/20.04/prod/ focal main"
      key: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----
        Version : GnuPG v1.4.7 (GNU/Linux)

        mQENBFYxWIwBCADAKoZhZlJxGNGWzqV+1OG1xiQeoowKhssGAKvd+buXCGISZJwT
        LXZqIcIiLP7pqdcZWtE9bSc7yBY2MalDp9Liu0KekywQ6VVX1T72NPf5Ev6x6DLV
        7aVWsCzUAF+eb7DC9fPuFLEdxmOEYoPjzrQ7cCnSV4JQxAqhU4T6OjbvRazGl3ag
        OeizPXmRljMtUUttHQZnRhtlzkmwIrUivbfFPD+fEoHJ1+uIdfOzZX8/oKHKLe2j
        H632kvsNzJFlROVvGLYAk2WRcLu+RjjggixhwiB+Mu/A8Tf4V6b+YppS44q8EvVr
        M+QvY7LNSOffSO6Slsy9oisGTdfE39nC7pVRABEBAAG0N01pY3Jvc29mdCAoUmVs
        ZWFzZSBzaWduaW5nKSA8Z3Bnc2VjdXJpdHlAbWljcm9zb2Z0LmNvbT6JATUEEwEC
        AB8FAlYxWIwCGwMGCwkIBwMCBBUCCAMDFgIBAh4BAheAAAoJEOs+lK2+EinPGpsH
        /32vKy29Hg51H9dfFJMx0/a/F+5vKeCeVqimvyTM04C+XENNuSbYZ3eRPHGHFLqe
        MNGxsfb7C7ZxEeW7J/vSzRgHxm7ZvESisUYRFq2sgkJ+HFERNrqfci45bdhmrUsy
        7SWw9ybxdFOkuQoyKD3tBmiGfONQMlBaOMWdAsic965rvJsd5zYaZZFI1UwTkFXV
        KJt3bp3Ngn1vEYXwijGTa+FXz6GLHueJwF0I7ug34DgUkAFvAs8Hacr2DRYxL5RJ
        XdNgj4Jd2/g6T9InmWT0hASljur+dJnzNiNCkbn9KbX7J/qK1IbR8y560yRmFsU+
        NdCFTW7wY0Fb1fWJ+/KTsC4=
        =J6gs
        -----END PGP PUBLIC KEY BLOCK----- 
packages:
  - moby-cli
  - libiothsm-std
  - moby-engine
write_files:
  - path: /etc/aziot/estauth.pem
    permissions: '0444'
    owner: root:root
    content: |
      ${AUTH_CERTIFICATE}
  - path: /etc/aziot/estauth.key.pem
    permissions: '0444'
    owner: root:root
    content: |
      ${AUTH_KEY}
  - path: /etc/aziot/config.toml
    permissions: '0444'
    owner: root:root
    content: |
      # ==============================================================================
      # Provisioning
      # ==============================================================================
      auto_reprovisioning_mode = "AlwaysOnStartup"

      [provisioning]
      source = "dps"
      #global_endpoint= "https://global.azure-devices-provisioning.net"
      global_endpoint= "https://${DPS_NAME}.azure-devices-provisioning.net"
      id_scope= "${SCOPE_ID}"

      [provisioning.attestation]
      method = "x509"
      registration_id = "${DEVICE_ID}"

      [provisioning.attestation.identity_cert]
      method = "est"
      common_name = "${DEVICE_ID}"

      # ==============================================================================
      # Cert issuance via EST
      # ==============================================================================

      [cert_issuance.est]
      trusted_certs = ["file:///etc/aziot/est-ca.pem"]

      [cert_issuance.est.auth]
      #username = "${EST_USERNAME}"
      #password = "${EST_PASSWORD}"

      identity_cert = "file:///etc/aziot/estauth.pem"
      identity_pk = "file:///etc/aziot/estauth.key.pem"

      [cert_issuance.est.urls]
      default = "https://${EST_HOSTNAME}/.well-known/est"

      # ==============================================================================
      # Default Edge Agent
      # ==============================================================================

      [agent]
      name = "edgeAgent"
      type = "docker"
      imagePullPolicy = "on-create"

      [agent.config]
      image = "${ACR_NAME}.azurecr.io/azureiotedge-agent:1.2"

      [agent.config.auth]
      serveraddress = "${ACR_NAME}.azurecr.io"
      username = "${ACR_USERNAME}"
      password = "${ACR_PASSWORD}"
      
      # ==============================================================================
      # Edge CA certificate issued over EST:
      # ==============================================================================

      [edge_ca]
      method = "est"

      # Optional EST configuration for issuing the Edge CA certificate below.
      # If not set, the defaults in [cert_issuance.est] will be used.
      url = "https://${EST_HOSTNAME}/ca/.well-known/est"
runcmd:
  - |
      set -x
      (
        # Wait for docker daemon to start
        while [ $(ps -ef | grep -v grep | grep docker | wc -l) -le 0 ]; do 
          sleep 3
        done

        sudo apt install aziot-edge -y
        systemctl unmask iotedge
        systemctl start iotedge

        # Download EST CA Certificate
        echo downloading the EST CA cert from ${EST_HOSTNAME}
        openssl s_client -showcerts -connect ${EST_HOSTNAME}:443 </dev/null 2>/dev/null|openssl x509 -outform PEM >./est-ca.pem
        sudo cp ./est-ca.pem /etc/aziot/
        rm ./est-ca.pem

        echo
        echo applying configuration to iot edge...
        
        sudo iotedge config apply
      ) &